name: Process
on:
  schedule:
    - cron: "10 03 * * *"    # 每天 03:10 执行
    - cron: "10 11 * * *"    # 每天 11:10 执行
  workflow_dispatch:         # 支持手动触发

concurrency:
  group: ${{ github.repository }}
  cancel-in-progress: true   # 新工作流会取消正在进行的工作流
  
env:
  # time zone
  TZ: Asia/Shanghai

  # network proxy aggregate config
  SUBSCRIBE_CONF: ${{ secrets.SUBSCRIBE_CONF }}

  # token
  PUSH_TOKEN: ${{ secrets.PUSH_TOKEN }}

  # network reachable
  REACHABLE: ${{ vars.REACHABLE }}

  # not check connective
  SKIP_ALIVE_CHECK: ${{ vars.SKIP_ALIVE_CHECK }}

  # skip remark
  SKIP_REMARK: ${{ vars.SKIP_REMARK }}

  # workflow mode
  WORKFLOW_MODE: ${{ vars.WORKFLOW_MODE }}

  # include spwcial protocols, such vless hysteria2 and hysteria
  ENABLE_SPECIAL_PROTOCOLS: ${{ vars.ENABLE_SPECIAL_PROTOCOLS }}

  # 添加新的环境变量
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
  SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
  SERVER_PORT: ${{ secrets.SERVER_PORT }}

jobs:
  process:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Prepare
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          architecture: "x64"
          cache: "pip"

      - name: Install
        run: pip3 install -r requirements.txt

      - name: Process Nodes
        run: |
          # 执行处理脚本
          python -u subscribe/process.py --overwrite
          
          # 检查本地文件
          if [ -f "data/clash.yaml" ]; then
            echo "本地 clash.yaml 文件已生成"
            ls -l data/clash.yaml
          else
            echo "警告：本地 clash.yaml 文件未生成"
          fi

      - name: Deploy to Server
        run: |
          # 检查 clash.yaml 是否存在
          if [ -f "data/clash.yaml" ]; then
            echo "找到 clash.yaml 文件，开始部署..."
            
            # 设置 SSH 密钥
            echo "$SERVER_SSH_KEY" > private_key.pem
            chmod 600 private_key.pem
            
            # 执行同步
            rsync -avz -e "ssh -i private_key.pem -p $SERVER_PORT -o StrictHostKeyChecking=no" \
              "data/clash.yaml" $SERVER_USERNAME@$SERVER_HOST:/data/files/clash.yaml
            
            if [ $? -eq 0 ]; then
              echo "✅ clash.yaml 已成功部署到服务器"
            else
              echo "❌ 部署失败"
              exit 1
            fi
          else
            echo "⚠️ 未找到 clash.yaml 文件，跳过部署步骤"
            # 不将此视为错误，继续执行后续步骤
          fi
           
      - name: Timestamp
        run: |
          echo "工作流完成时间："
          date "+%Y-%m-%d %H:%M:%S"
